#!/bin/ksh

# List of servers to check
servers=("server1" "server2" "server3")

# Directory where the filenames are located
directory="/appbin/webserverNG/"

# ANSI color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Function to check processes on a remote server
check_processes() {
    local server=$1
    echo "Checking server: $server"

    # Define the remote script
    remote_script='
        RED="\033[0;31m"
        GREEN="\033[0;32m"
        NC="\033[0m"

        directory="'$directory'"

        if cd "$directory" 2>/dev/null; then
            for file in $(ls -ld https-* 2>/dev/null | awk "{print \$9}"); do
                if pgrep -f "$file" > /dev/null; then
                    echo "RUNNING $file"
                else
                    echo "NOT_RUNNING $file"
                fi
            done
        else
            echo "NO_DIRECTORY"
        fi
    '

    # Capture the output of the remote script
    result=$(ssh -T "$server" /bin/ksh -c "$remote_script")

    if [ "$result" = "NO_DIRECTORY" ]; then
        echo "Directory $directory does not exist on $server"
    else
        echo "$result" | while read status process; do
            if [ "$status" = "RUNNING" ]; then
                echo "${GREEN}Process $process is running on $server${NC}"
            elif [ "$status" = "NOT_RUNNING" ]; then
                echo "${RED}Process $process is NOT running on $server${NC}"
                echo "Do you want to start the process $process on $server? (yes/no): \c"
                read response
                if [ "$response" = "yes" ]; then
                    start_script='
                        startup_script="'$directory'/'$process'/startup.sh"
                        if [ -x "$startup_script" ]; then
                            "$startup_script"
                            if [ $? -eq 0 ]; then
                                echo "Process '$process' started successfully on '$server'"
                            else
                                echo "Failed to start process '$process' on '$server'"
                            fi
                        else
                            echo "Startup script $startup_script not found or not executable for process '$process' on '$server'"
                        fi
                    '
                    ssh -T "$server" /bin/ksh -c "$start_script"
                else
                    echo "Process $process will not be started on $server"
                fi
            fi
        done
    fi
}

# Loop through each server and check processes
for server in "${servers[@]}"; do
    check_processes "$server"
done
